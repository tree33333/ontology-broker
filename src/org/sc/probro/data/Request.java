package org.sc.probro.data;

import java.io.*;
import java.lang.reflect.*;
import java.util.*;
import java.sql.*;

import org.json.JSONException;
import org.json.JSONWriter;
import org.sc.probro.BrokerStart;

public class Request extends DBObject {
	
	public static final Integer RESPONSE_REDUNDANT 		= 0;
	public static final Integer RESPONSE_FULFILLED 		= 1;
	public static final Integer RESPONSE_PENDING		= 2;
	public static final Integer RESPONSE_INCOMPLETE 	= 3;
	public static final Integer RESPONSE_ERROR          = 4;
	public static final Integer RESPONSE_ESCALATION     = 5;

	public Integer request_id;  // primary key, auto-generated
	
	public String ontology_term;
	public String provisional_term;
	public Integer parent_request;
	public String search_text;
	public String context;
	public String comment;
	public String provenance;
	public Integer creator_id;
	public Integer modified_by;
	public java.util.Date date_submitted;
	public Integer status;
	public Integer ontology_id;

	public Request() { 
		super();
	}
	
	public Request(ResultSet rs) throws SQLException { super(rs); }
	
	public String getProvisionalTerm() {
		return String.format("http://%s:%d/request/%s/", 
				BrokerStart.HOSTNAME,
				BrokerStart.PORT,
				provisional_term);
	}
	
	protected void writeJSONObjectContents(JSONWriter json) throws JSONException {
		super.writeJSONObjectContents(json);
		json.key("provisional_id").value(getProvisionalTerm());
	}
	
	public int hashCode() { return request_id.hashCode(); }
	
	public boolean isRedundant() { return status.equals(RESPONSE_REDUNDANT); }
	public boolean isFulfilled() { return status.equals(RESPONSE_FULFILLED); }
	public boolean isPending() { return status.equals(RESPONSE_PENDING); }
	public boolean isIncomplete() { return status.equals(RESPONSE_INCOMPLETE); }
	
	public boolean isAutoGenerated(String fieldName) {
		return fieldName.equals("request_id");
	}
	
	public boolean equals(Object o) { 
		if(!(o instanceof Request)) { return false; }
		Request r = (Request)o;
		return r.request_id.equals(request_id);
	}
	
	public String toString() { return request_id.toString(); }
	
	public String[] getAutoGeneratedFields() {
		return new String[] { "request_id" };
	}
	
	public String[] getKeyFields() {
		return getAutoGeneratedFields();
	}
}
