
CREATE TABLE ONTOLOGYS ( 
ontology_id      int not null primary key generated by default as identity,
name             varchar(200) not null unique
);

INSERT INTO ONTOLOGYS (name) values ('PRO');

CREATE TABLE USERS (
user_id         int not null primary key generated by default as identity,
user_name       varchar(100) not null unique
);

INSERT INTO USERS (user_name) values ('anonymous');

CREATE TABLE REQUESTS (
request_id       int not null primary key generated by default as identity,
provisional_term varchar(200) not null,
ontology_term    varchar(200),
search_text      varchar(1000) not null,
context          clob,
comment          clob,
creator_id       int not null references USERS(user_id) ON DELETE CASCADE,
modified_by      int not null references USERS(user_id) ON DELETE CASCADE,
provenance       varchar(1000) not null,
date_submitted   date not null,
status           int not null,
ontology_id      int not null references ONTOLOGYS(ontology_id) ON DELETE CASCADE,
parent_request   int unique references REQUESTS(request_id) ON DELETE CASCADE
);

CREATE TABLE PROVISIONALTERMS (
provisional_id   int not null primary key generated by default as identity,
provisional_term varchar(200) unique,
request_id       int references REQUESTS(request_id) ON DELETE CASCADE
);

CREATE TABLE METADATAS (
metadata_id      int not null primary key generated by default as identity,
request_id       int not null references REQUESTS(request_id) ON DELETE CASCADE,
metadata_key     varchar(100) not null,
metadata_value   varchar(1000) not null,
created_on       date not null,
created_by       int not null references USERS(user_id) ON DELETE CASCADE
);

