
CREATE TABLE USERS (
user_id         int not null primary key generated by default as identity,
user_name       varchar(100) not null unique,
user_contact    clob
);

INSERT INTO USERS (user_name, user_contact) values ('anonymous', '?');

CREATE TABLE ONTOLOGYS ( 
ontology_id      int not null primary key generated by default as identity,
ontology_name    varchar(200) not null unique,
maintainer_id    int not null references USERS(user_id) ON DELETE CASCADE
);

INSERT INTO ONTOLOGYS (ontology_name, maintainer_id) values ('PRO', 1);

CREATE TABLE ONTOLOGYFIELDS (
field_id        int primary key generated by default as identity,
ontology_id     int not null references ONTOLOGYS(ontology_id) ON DELETE CASCADE,
field_name      varchar(100) not null,
field_description  clob,
field_metadata_key  varchar(100)
);

INSERT INTO ONTOLOGYFIELDS (ontology_id, field_name, field_metadata_key) values (1, '', ''); 

CREATE TABLE REQUESTS (
request_id       int not null primary key generated by default as identity,
provisional_term varchar(200) not null,
ontology_term    varchar(200),
search_text      varchar(1000) not null,
context          clob,
comment          clob,
creator_id       int not null references USERS(user_id) ON DELETE CASCADE,
modified_by      int not null references USERS(user_id) ON DELETE CASCADE,
provenance       varchar(1000) not null,
date_submitted   date not null,
status           int not null,
ontology_id      int not null references ONTOLOGYS(ontology_id) ON DELETE CASCADE,
parent_request   int unique references REQUESTS(request_id) ON DELETE CASCADE
);

CREATE TABLE PROVISIONALTERMS (
provisional_id   int not null primary key generated by default as identity,
provisional_term varchar(200) unique,
request_id       int references REQUESTS(request_id) ON DELETE CASCADE
);

CREATE TABLE METADATAS (
metadata_id      int not null primary key generated by default as identity,
request_id       int not null references REQUESTS(request_id) ON DELETE CASCADE,
metadata_key     varchar(100) not null,
metadata_value   varchar(1000) not null,
created_on       date not null,
created_by       int not null references USERS(user_id) ON DELETE CASCADE
);

